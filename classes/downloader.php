<?php

class Downloader {
    private $con;
    private $patient;
    public $filename;
    
    function __construct($con, $patientID)
    {
        $this->con = $con;
        $this->patient = $patientID;
        $this->filename = "./downloads/patient.xml";
        if (file_exists($this->filename)) unlink($this->filename);
    }

    function write()
    {
        $file = fopen($this->filename, 'w');
        if ($file) {
            fwrite($file, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n");
            fwrite($file, "<!-- Generated by the ICPC secureEHR -->\n\n");
            fwrite($file, "<!DOCTYPE SecPML SYSTEM \"https://emr.icpc-3.info/secpml.dtd\">\n");
            fwrite($file, "<SecPML version=\"0.1.0\">\n");
            $this->writePatientInfo($file);
            $this->writeEpisodes($file);
            fwrite($file, "</SecPML>\n");
            fclose($file);
        }
    }
    
    private function writePatientInfo($file)
    {
        $patient = new Patient($this->con, $this->patient);
        $patient->get();
        fwrite($file, "\t<Patient>\n");
        fwrite($file, "\t\t<Label>" . $patient->label . "</Label>\n");
        fwrite($file, "\t\t<Email>" . $patient->email . "</Email>\n");
        fwrite($file, "\t\t<Info>" . $patient->info . "</Info>\n");
        fwrite($file, "\t</Patient>\n");
    }
    
    private function writeEpisodes($file)
    {
        $episodes = new Episodes($this->con);
        if ($eps_patient = $episodes->get($this->patient)) {
            foreach ($eps_patient as $episode) {
                fwrite($file, "\t<Episode");
                fwrite($file, " active=\"" . $episode["active"] . "\"");
                fwrite($file, " start=\"" . $episode["startdate"] . "\"");
                fwrite($file, " last=\"" . $episode["enddate"] . "\"");
                fwrite($file, " name=\"" . htmlentities($episode["name"]) . "\">\n");
                $this->writeVisits($file, $episode["id"]);
                fwrite($file, "\t</Episode>\n");                
            }
        }
    }
    
    private function writeVisits($file, $episodeId)
    {
        $visits = new Visits($this->con);
        if ($visitsInEpisode = $visits->get($episodeId)) {
            foreach ($visitsInEpisode as $visit) {
                fwrite($file, "\t\t<Visit");
                fwrite($file, " date=\"" . $visit["date"] . "\">\n");
                $this->writeStatements($file, $visit["id"]);
                fwrite($file, "\t\t</Visit>\n");
            }
        }
    }
    
    private function writeStatements($file, $visitId)
    {
        $skinds = new SKinds($this->con);
        $statements = new Statements($this->con);
        if ($statsInVisit = $statements->get($visitId)) {
            foreach ($statsInVisit as $statement) {
                fwrite($file, "\t\t\t<Statement");
                fwrite($file, " kind=\"" . $skinds->getName($statement["kind"]) . "\"");
                if ($statement["importance"] > 0) {
                    fwrite($file, " importance=\"" . $statement["importance"] . "\"");
                }
                fwrite($file, ">");
                fwrite($file, htmlentities($statement["text"]));
                fwrite($file, "</Statement>\n");
            }
        }
    }
}

?>

